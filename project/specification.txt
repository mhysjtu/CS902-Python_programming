迷宫游戏GUI设计及形态学方法求解特定迷宫
 机械与动力工程学院 苗浩原 515020910125
一、背景介绍
	机器人专业是一个学科交叉性极强的专业，不仅需要扎实的机械作为其支撑，还需要强大的算法使其成为真正的机器人。而在算法方面比较重要的一部分就是机器人的路径规划问题，该类算法为机器人提供了自主运动的解决方案，而路径规划又分为已知区域和未知区域的路径规划。该python程序解决的是针对特定种类迷宫，利用opencv的形态学操作实现的一种较为简单的已知区域的迷宫求解问题。该程序的场景为，用户用键盘操纵机器人“小橙”，使其走出迷宫，而路径的解已经通过程序自动算出。
    通过本程序的设计与实现，锻炼了我很多方面的能力，包括opencv的一些基本形态学操作、python中GUI程序封装成类的编写、简单交互式游戏的编写以及路径规划的一种方式。
    该程序集休闲与技术与一体，既能让人在闲暇时玩迷宫游戏消遣，又能通过源程序体会形态学操作求解迷宫的神奇之处。

二、设计思想
    本程序是参考一篇用C++语言编写的形态学求解迷宫博客，通过python重新实现该算法。该算法只适用于所谓的“完美迷宫”，即从迷宫的一点到另外一点有且只有一条路径，没有环路且没有开放的区域，迷宫的出口和入口是可以从迷宫外连接的。游戏采用的迷宫均取自http://www.mazegenerator.net/网站的自动迷宫生成器，大小为20X20，像素为324*324的直角型迷宫。算法的根基在于：该类型的迷宫可以用右手摸墙法则解出，即从迷宫的入口开始总是贴着右边的墙移动总可以走到出口。因此可以用形态学操作中的分水岭算法找出迷宫其中联通的一个围墙，并利用膨胀和侵蚀的操作将迷宫的解求出。
    迷宫的GUI实现是通过Tkinter完成的。通过对迷宫图片的分析和预处理，将324*324像素的图片转化为40*40格的便于用GUI实现的迷宫；并利用事件驱动编程，用键盘的上下左右控制机器人走完迷宫，并留下经过的路径。

三、程序说明
    程序分为三个文件，Maze.py，GUI.py及main.py。其中Maze文件包含两个函数，一个用于初始化迷宫图片，另一个是求解迷宫的核心算法。
    GUI文件用于图形交互界面中迷宫的生成、答案的显示以及和用户的交互等。可以实现迷宫的显示，走过路径的显示，游戏重新开始，游戏的胜利失败判断以及迷宫答案的显示。
    main是程序运行的入口，将前两个文件结合在一起。运行它即可开始游戏。
    程序用到了四个库：Tkinter、opencv、numpy以及random。Tkinter用于GUI的生成；opencv用于图片的形态学处理；numpy用于方便的生成初始化矩阵；random用于迷宫图片的随机选取。

四、使用指南
    1.用pip下载Tkinter、numpy以及random库
    2.下载opencv-2.4.10.exe；安装后将opencv\build\python\2.7\x86文件夹中的cv2.pyd文件复制到python目录下Lib\site-packages，即完成了opencv库的安装
    3.运行main.py函数即可开始游戏；
    4.利用键盘上的上下左右控制机器人移动；restart键用于重新开始（会需要一些时间）；answer按钮会显示迷宫的解。
    5.若想要换一个迷宫，重新运行main.py即可，程序会自动从10个迷宫中挑选一个。

五、参考文献
http://blog.leanote.com/post/leeyoung/539a629aab35bc44e2000000
改博客是c++版本的形态学解迷宫，我将它改写成了python版本
http://blog.csdn.net/songrotek/article/details/48023301
该博客是用于参考如何制作迷宫的GUI，参考了其中的一些参数。
